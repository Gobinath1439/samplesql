# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


trigger:
- master

pr: none

pool:
  vmImage: 'windows-latest'

jobs:

- job: DeployDatabaseChanges
  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '3.1.x' 

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      artifactName: 'drop'
      downloadPath: '$(System.DefaultWorkingDirectory)'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(System.DefaultWorkingDirectory)'
      artifact: 'drop'
      publishLocation: 'pipeline'

  - task: DownloadFile@1
    inputs:
      sourceUrl: 'https://download.microsoft.com/download/9/2/2/922C6E5A-8708-4B5C-97D5-705D83A89FBB/sqlpackage-linux-x64-latest.tar.gz'
      targetPath: '$(System.DefaultWorkingDirectory)/sqlpackage-linux-x64-latest.tar.gz'

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(System.DefaultWorkingDirectory)/sqlpackage-linux-x64-latest.tar.gz'
      destinationFolder: '$(System.DefaultWorkingDirectory)/sqlpackage'

  - script: |
      tar -xzvf $(System.DefaultWorkingDirectory)/sqlpackage-linux-x64-latest.tar.gz -C $(System.DefaultWorkingDirectory)/sqlpackage
    displayName: 'Extract sqlpackage'

  - script: |
      $(System.DefaultWorkingDirectory)/sqlpackage/sqlpackage /a:Publish /sf:$(dacpacFilePath) /tsn:$(testserver-12.database.windows.net).database.windows.net /tdn:$(sample-db) /tu:$(Admin24) /tp:$(My_localuser) /p:CommandTimeout=1200
    displayName: 'Deploy database changes'

  - powershell: |
      # Additional tasks or cleanup if needed
    displayName: 'Additional tasks'

